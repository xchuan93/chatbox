/* 
*  Wire
*  Copyright (C) 2016 Wire Swiss GmbH
*  
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*  
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
*  GNU General Public License for more details.
*  
*  You should have received a copy of the GNU General Public License
*  along with this program. If not, see http://www.gnu.org/licenses/.
*/ 

/*  All custom classes refered here should be stored in WireExtensionComponents binary */

@import "colors.cas";

Button.dialogue-button-full, Button.dialogue-button-empty, Button.dialogue-button-empty-light, Button.dialogue-button-empty-dark, Button.dialogue-button-empty-monochrome, Button.dialogue-button-full-monochrome, Button.dialogue-button-full-destructive {
    textTransform: upper;
    titleLabel: @{
        font: $font-small-light;
    };

    layer: @{
        cornerRadius: 4;
    }

    contentEdgeInsets: 4, 16; /* top=bottom=4, left=right=8 */
}

Button.dialogue-button-full {
    backgroundImageColor[state:normal]: $color-accent-current;
    titleColor[state:normal]: white;
    titleColor[state:highlighted]: $color-text-dimmed;
}

Button.dialogue-button-full-destructive {
    backgroundImageColor[state:normal]: $color-accent-red;
    titleColor[state:normal]: white;
    titleColor[state:highlighted]: $color-text-dimmed;
}

Button.dialogue-button-full-monochrome {
    backgroundImageColor[state:normal]: white;
    titleColor[state:normal]: $color-text-foreground-light;
}

Button.dialogue-button-empty, Button.dialogue-button-empty-light, Button.dialogue-button-empty-dark, Button.dialogue-button-empty-monochrome {
    layer: @{
        borderWidth: 1;
    };
}

Button.dialogue-button-empty, Button.dialogue-button-empty-light, Button.dialogue-button-empty-dark {
    titleColor[state:normal]: $color-button-empty-text;
    titleColor[state:highlighted]: $color-text-dimmed;
    titleColor[state:disabled]: $color-text-dimmed;
    borderColor[state:normal]: $color-accent-current;
    borderColor[state:highlighted]: $color-accent-current-darken;
    borderColor[state:disabled]: $color-text-dimmed;
}

Button.dialogue-button-empty-light {
    titleColor[state:normal]: $color-button-empty-text-light;
}

Button.dialogue-button-empty-dark {
    titleColor[state:normal]: $color-button-empty-text-dark;
}

Button.dialogue-button-empty-monochrome {
    titleColor[state:normal]: white;
    titleColor[state:highlighted]: $color-text-dimmed;
    borderColor[state:normal]: rgb(255, 255, 255, 0.32);
    borderColor[state:highlighted]: rgb(255, 255, 255, 0.16);
}

IconButton.actionBarButton {
    layer: @{
        borderWidth: 0;
    };
    backgroundColor: $color-accent-current;
    iconColor: white;
    iconColor[state:selected]: white;
}

IconButton.default, IconButton.circular {
    iconColor: $color-icon-normal;
    iconColor[state:selected]: $color-icon-selected;
    iconColor[state:highlighted]: $color-icon-highlighted;
    backgroundImageColor[state:selected]: $color-icon-background-selected;
}

IconButton.circular {
    circular: true;
    borderWidth: 0;
    titleEdgeInsets: 0, 0, 0, 0;
    contentHorizontalAlignment: center;
}

IconButton.default-dark, IconButton.circular-dark {
    iconColor: $color-icon-normal-light;
    iconColor[state:selected]: $color-icon-selected-light;
    iconColor[state:highlighted]: $color-icon-highlighted-light;
    backgroundImageColor[state:selected]: $color-icon-background-selected-light;
}

IconButton.circular-dark {
    circular: true;
    borderWidth: 0;
}

IconButton.default-light, IconButton.circular-light {
    iconColor:$color-icon-normal-dark;
    iconColor[state:selected]: $color-icon-selected-dark;
    iconColor[state:highlighted]: $color-icon-highlighted-dark;
    backgroundImageColor[state:selected]: $color-icon-background-selected-dark;
}

IconButton.circular-light {
    borderWidth: 0;
    circular: true;
}

IconButton.navigation {
    iconColor: $color-icon-normal-dark;
    iconColor[state:selected]: $color-icon-selected-dark;
    iconColor[state:highlighted]: $color-icon-highlighted-dark;
    titleEdgeInsets: 0, 5, 0, -5;
    titleLabel: @{
        font: $font-small-light;
    }
    adjustsImageWhenHighlighted: NO;
    borderWidth: 0.0
    circular: false;
    contentHorizontalAlignment: left;
}

IconButton.ephemeral {
    iconColor[state:normal]: $color-accent-current;
    iconColor[state:highlighted]: $color-icon-normal;
}

CheckBoxButton {
    titleLabel: @{
        font: $font-small-light;
    }

    imageView: @{
        layer: @{
            borderWidth: 1;
            cornerRadius: 3;
        }
    }

    contentHorizontalAlignment: left;
    imageEdgeInsets: -8;
    contentEdgeInsets: 0, 8, 0, 0;
}

CheckBoxButton.dark {
    titleColor: $color-text-foreground-dark;

    imageView: @{
        layer: @{
            borderColor: $color-icon-background-selected-dark;
        }
    }
}

CheckBoxButton.light {
    titleColor: $color-text-foreground-light;

    imageView: @{
        layer: @{
            borderColor: $color-icon-background-selected-light;
        }
    }
}

Button.tab, Button.tab-light, Button.tab-dark, Button.tab-monochrome {
    titleLabel: @{
        font: $font-small-semibold;
    };
    textTransform: upper;
    titleEdgeInsets: 0, 0, 4, 0;
}

Button.tab {
    titleColor[state:normal]: $color-tab-normal;
    titleColor[state:highlighted]: $color-tab-highlighted;
    titleColor[state:selected]: $color-tab-selected;
}

Button.tab-light {
    titleColor[state:normal]: $color-tab-normal-light;
    titleColor[state:highlighted]: $color-tab-highlighted-light;
    titleColor[state:selected]: $color-tab-selected-light;
}

Button.tab-dark {
    titleColor[state:normal]: $color-tab-normal-dark;
    titleColor[state:highlighted]: $color-tab-highlighted-dark;
    titleColor[state:selected]: $color-tab-selected-dark;
}

Button.tab-monochrome {
    titleColor[state:normal]: rgb(255, 255, 255, 0.56);
    titleColor[state:highlighted]: rgb(255, 255, 255, 0.56);
    titleColor[state:selected]: white;
}

IconLabelButton {
    titleLabel: @{
        font: $font-small-light;
    }
    subtitleLabel: @{
        textAlignment: center;
    }

    iconButton: @{
        borderWidth: 1;
        borderColor[state:normal]: rgb(255, 255, 255, 0.48);
        borderColor[state:selected]: clear;
        borderColor[state:disabled]: rgb(255, 255, 255, 0.24);
        iconColor[state:normal]: $color-text-foreground-dark;
        iconColor[state:selected]: $color-text-foreground-light;
        iconColor[state:disabled]: rgb(255, 255, 255, 0.4);
        backgroundImageColor[state:normal]: clear;
        backgroundImageColor[state:selected]: $color-text-foreground-dark;
        backgroundImageColor[state:disabled]: clear;
    }

    titleColor[state:normal]: $color-text-foreground-dark;
    titleColor[state:disabled]: rgb(255, 255, 255, 0.4);
}
